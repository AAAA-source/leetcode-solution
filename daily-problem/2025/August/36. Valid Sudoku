# Intuition
<!-- Describe your first thoughts on how to solve this problem. -->
Simply check through all the input

# Approach
<!-- Describe your approach to solving the problem. -->
We can use a one hot embeding to fastetr the process.
 - 1 -> 100000000
 - 2 -> 010000000

# Complexity
- Time complexity: O(1)
<!-- Add your time complexity here, e.g. $$O(n)$$ -->

- Space complexity: O(1)
<!-- Add your space complexity here, e.g. $$O(n)$$ -->

# Code
```python3 []
from typing import List

class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        rows = [0] * 9
        cols = [0] * 9
        boxes = [0] * 9

        for r in range(9):
            for c in range(9):
                ch = board[r][c]
                if ch == '.':
                    continue
                d = ord(ch) - ord('0')     # æˆ– d = int(ch)
                mask = 1 << (d - 1)
                b = (r // 3) * 3 + (c // 3)

                if (rows[r] & mask) or (cols[c] & mask) or (boxes[b] & mask):
                    return False

                rows[r] |= mask
                cols[c] |= mask
                boxes[b] |= mask
        return True

```